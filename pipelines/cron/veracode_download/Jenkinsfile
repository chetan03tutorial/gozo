#! /usr/local/bin/groovy

@Library('workflowlib-sandbox@master')
import com.lbg.workflow.sandbox.*

properties([
	buildDiscarder(logRotator(artifactDaysToKeepStr: '1', artifactNumToKeepStr: '5', daysToKeepStr: '1', numToKeepStr: '5')),
	[$class: 'RebuildSettings', autoRebuild: true, rebuildDisabled: false]
])

def deployer
def context
def tester
def epoch

def targetBranch= env.BRANCH_NAME?: 'veracode'


stage('Initialize'){
	node(){
		deleteDir()
		checkout scm
		context = new BuildContext('pca-sales-api', readFile('pipelines/cron/veracode_upload/job-configuration.json'))
		epoch = sh(returnStdout: true, script: 'date +%d%m%Y%H%M').trim()

		deployer = load('pipelines/tests/veracode.groovy')


	}
}
milestone(label:'initialized')

lock(inversePrecedence: true, quantity: 1, resource: "pca-sales-api-${targetBranch}"){

	stage('package'){

		try{
			deployer.runTest("${targetBranch}", context)
		}catch(error) {
			echo error.message
			echo "IGNORE: Failure"
		}finally{
        }
	}
	milestone(label:'packaged')

	stage('Report'){
	node(){
		deployer.downloadVeracode("${targetBranch}", context)
	}
	}
	milestone(label:'downloaded')



} //End Lock
