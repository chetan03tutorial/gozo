source ./proc.jacl

#-----------------------------------------------------------------
# Creates JVM properties
# Author: Jesper Madsen
#-----------------------------------------------------------------

#-----------------------------------------------------------------
# Func deleteJVM {jvmEntry}
# Author: Jesper Madsen
#-----------------------------------------------------------------
proc deleteJVM {jvmEntry} {
    global AdminConfig jvm

    set listProp [$AdminConfig list Property $jvm]
    foreach eListProp $listProp {
        set name [$AdminConfig showAttribute $eListProp name]
        if { $name == $jvmEntry } {
            $AdminConfig remove $eListProp
            break
        }
    }
}

#-----------------------------------------------------------------
# Func modifyJVM {jvmEntry jvmValue}
# Author: Jesper Madsen
#-----------------------------------------------------------------
proc modifyJVM {jvmEntry jvmValue} {
    global AdminConfig jvm

    deleteJVM $jvmEntry
    puts "Info - setting $jvmEntry with $jvmValue"
    $AdminConfig modify $jvm [subst {{systemProperties {{{name {$jvmEntry}} {value {$jvmValue}}} }}} ]
}

#-----------------------------------------------------------------
# Main
#-----------------------------------------------------------------

#--------------------------------------------------------------
# load input.props file
#--------------------------------------------------------------

set propFile input.props
set props   [loadProperties $propFile]

#get props
set nodeName    [$props getProperty was.node.name]
set srvName     [$props getProperty srv.name]
set earPath     [$props getProperty ear.path]

#-----------------------------------------------------------------
# do some sanity checking 
#     -- do we have a server by this name? 
#-----------------------------------------------------------------
set server1 [$AdminConfig getid "/Node:$nodeName/Server:$srvName/"]

puts "Info : -- Checking for existence of server $srvName."

set createMsg  "Creating JVM Properties"
set successMsg "Success creating JVM Properties"

if {[llength $server1] == 0} {
    puts "Error: -- server not found for name $srvName."
}

#-----------------------------------------------------------------
# if do have a server by this name, then create the JVM properties 
#-----------------------------------------------------------------

if {[llength $server1] == 1} {
    puts "Info : -- $srvName exists."

set jvm [$AdminConfig list JavaVirtualMachine $server1]

puts "$createMsg"

set jvmEntry "iSecurityEnabled"
set jvmValue "false"
modifyJVM $jvmEntry $jvmValue

set jvmEntry "GalaxyLogDir"
set jvmValue "\${SERVER_LOG_ROOT}"
modifyJVM $jvmEntry $jvmValue

set jvmEntry "contentTimeToLive"
set jvmValue "0"
modifyJVM $jvmEntry $jvmValue

set jvmEntry "contentInActivityTime"
set jvmValue "0"
modifyJVM $jvmEntry $jvmValue

set jvmEntry "bundleTimeToLive"
set jvmValue "0"
modifyJVM $jvmEntry $jvmValue

set jvmEntry "bundleInActivityTime"
set jvmValue "0"
modifyJVM $jvmEntry $jvmValue

set jvmEntry "LtpaToken"
set jvmValue "LtpaToken2"
modifyJVM $jvmEntry $jvmValue

set jvmEntry "LTSBRetail_CookieDomain"
set jvmValue ".lloydstsb.co.uk"
modifyJVM $jvmEntry $jvmValue

set jvmEntry "LTSBCommercial_CookieDomain"
set jvmValue ".lloydstsb.co.uk"
modifyJVM $jvmEntry $jvmValue

set jvmEntry "BOSRetail_CookieDomain"
set jvmValue ".bankofscotland.co.uk"
modifyJVM $jvmEntry $jvmValue

set jvmEntry "BOSCommercial_CookieDomain"
set jvmValue ".bankofscotland.co.uk"
modifyJVM $jvmEntry $jvmValue

set jvmEntry "HalifaxRetail_CookieDomain"
set jvmValue ".halifax-online.co.uk"
modifyJVM $jvmEntry $jvmValue

set jvmEntry "VerdeRetail_CookieDomain"
set jvmValue ".verde.co.uk"
modifyJVM $jvmEntry $jvmValue

set jvmEntry "VerdeCommercial_CookieDomain"
set jvmValue ".verde.co.uk"
modifyJVM $jvmEntry $jvmValue

puts "$successMsg"

$AdminConfig save

puts "JVM Task Completed..."

}